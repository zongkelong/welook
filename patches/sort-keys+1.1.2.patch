diff --git a/node_modules/sort-keys/index.js b/node_modules/sort-keys/index.js
index 53489d7..f75a0e0 100644
--- a/node_modules/sort-keys/index.js
+++ b/node_modules/sort-keys/index.js
@@ -1,7 +1,7 @@
 'use strict';
-const isPlainObj = require('is-plain-obj');
+var isPlainObj = require('is-plain-obj');
 
-module.exports = (obj, opts) => {
+module.exports = function (obj, opts) {
 	if (!isPlainObj(obj)) {
 		throw new TypeError('Expected a plain object');
 	}
@@ -10,40 +10,29 @@ module.exports = (obj, opts) => {
 
 	// DEPRECATED
 	if (typeof opts === 'function') {
-		throw new TypeError('Specify the compare function as an option instead');
+		opts = {compare: opts};
 	}
 
-	const deep = opts.deep;
-	const seenInput = [];
-	const seenOutput = [];
+	var deep = opts.deep;
+	var seenInput = [];
+	var seenOutput = [];
 
-	const sortKeys = x => {
-		const seenIndex = seenInput.indexOf(x);
+	var sortKeys = function (x) {
+		var seenIndex = seenInput.indexOf(x);
 
 		if (seenIndex !== -1) {
 			return seenOutput[seenIndex];
 		}
 
-		const ret = {};
-		const keys = Object.keys(x).sort(opts.compare);
+		var ret = {};
+		var keys = Object.keys(x).sort(opts.compare);
 
 		seenInput.push(x);
 		seenOutput.push(ret);
 
-		for (let i = 0; i < keys.length; i++) {
-			const key = keys[i];
-			const val = x[key];
-
-			if (deep && Array.isArray(val)) {
-				const retArr = [];
-
-				for (let j = 0; j < val.length; j++) {
-					retArr[j] = isPlainObj(val[j]) ? sortKeys(val[j]) : val[j];
-				}
-
-				ret[key] = retArr;
-				continue;
-			}
+		for (var i = 0; i < keys.length; i++) {
+			var key = keys[i];
+			var val = x[key];
 
 			ret[key] = deep && isPlainObj(val) ? sortKeys(val) : val;
 		}
diff --git a/node_modules/sort-keys/license b/node_modules/sort-keys/license
index e7af2f7..654d0bf 100644
--- a/node_modules/sort-keys/license
+++ b/node_modules/sort-keys/license
@@ -1,9 +1,21 @@
-MIT License
+The MIT License (MIT)
 
 Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)
 
-Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
 
-The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
 
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+THE SOFTWARE.
